#!/bin/bash
# /etc/init.d/minecraft

### BEGIN INIT INFO
# Provides: minecraft
# Required-Start: $local_fs $remote_fs
# Required-Stop: $local_fs $remote_fs
# Should-Start: $network
# Should-Stop: $network
# Default-Start: 2 3 4 5
# Default-Stop: 0 1 6
# Short-Description: Minecraft server
# Description: Init script for minecraft/bukkit server, with rolling logs and use of ramdisk for less lag.
### END INIT INFO

### Based on http://www.minecraftwiki.net/wiki/Server_startup_script

### REQUIREMENTS: 
# screen, rsync

### SETUP
#
## Move or symlink the script to /etc/init.d/minecraft
#
## Rename your world dir to diskworld and symlink the ramdisk in instead.
#
# cd ~/minecraft
# mv world diskworld
# ln -s /dev/shm/world world
#
## Create the log directory
#
# mkdir logs
#
### Setup cron
#
# sudo crontab -e
#
# m h dom mon dow command
# 02 05 * * * /etc/init.d/minecraft backup
# 55 04 * * * /etc/init.d/minecraft log-roll
# */10 * * * * /etc/init.d/minecraft to-disk
#


### SETTINGS

# Name of server.jar file
SERVICE='server.jar'
# User that should run the server
USERNAME="minecraft"
# Path to minecraft directory excluding the last ex: /home/v/mine
MCPATH='/minecraft/server'
CPU_COUNT=1
# Change the values of -Xmx###M and -Xms###M to how much ram you want to give to the
# server. The world will be stored in you ram, so subtract your world size from values.
INVOCATION="java -Xmx4096M -Xms4096M -XX:+UseConcMarkSweepGC -XX:+CMSIncrementalPacing -XX:ParallelGCThreads=$CPU_COUNT -XX:+AggressiveOpts -jar $SERVICE nogui"
# Where the world backups should go
BACKUPPATH='/minecraft/web/backups'
# Where the logs are copied when running log-roll
LOGPATH="${MCPATH}/logs"
# Where the world is located on the disk
WORLDSTORAGE='/minecraft/server/diskworld'
#Path to the the mounted ramdisk default in ubuntu: /dev/shm
RAMDISK='/dev/shm'
#Pidfile so monit knows what to monitor
PIDFILE=/minecraft/server/var/run/minecraft.pid
#Determine username
ME=`whoami`

as_user() {
    if [ $ME == $USERNAME ] ; then
        bash -c "$1"
    else
        su - $USERNAME -c "$1"
    fi
}

mc_start() {
    if pgrep -f SCREEN > /dev/null
    then
        echo "Tried to start but $SERVICE was already running!"
    else
        echo "$SERVICE was not running... starting."
        # rsync -tr $MCPATH/world-disc /dev/shm/
        cd $MCPATH
        as_user "cd $MCPATH && screen -dmS minecraft $INVOCATION"
        sleep 7
        if pgrep -f SCREEN > /dev/null
        then
            pgrep -f SCREEN > $PIDFILE
            echo "$SERVICE is now running."
        else
            echo "Could not start $SERVICE."
        fi
    fi
}

mc_saveoff() {
    if pgrep -f SCREEN > /dev/null
    then
        echo "$SERVICE is running... suspending saves"
        # as_user "screen -p 0 -S minecraft -X eval 'stuff \"say Backing up world.\"\015'"
        as_user "screen -p 0 -S minecraft -X eval 'stuff \"save-off\"\015'"
        as_user "screen -p 0 -S minecraft -X eval 'stuff \"save-all\"\015'"
        sync
        sleep 10
    else
        echo "$SERVICE was not running. Not suspending saves."
    fi
}

mc_saveon() {
    if pgrep -f SCREEN > /dev/null
    then
        echo "$SERVICE is running... re-enabling saves"
        as_user "screen -p 0 -S minecraft -X eval 'stuff \"save-on\"\015'"
        # as_user "screen -p 0 -S minecraft -X eval 'stuff \"say World backup complete. \"\015'"
    else
        echo "$SERVICE was not running. Not resuming saves."
    fi
}

mc_stop() {
    if pgrep -f SCREEN > /dev/null
    then
        echo "$SERVICE is running... stopping."
        as_user "screen -p 0 -S minecraft -X eval 'stuff \"save-all\"\015'"
        sleep 10
        as_user "screen -p 0 -S minecraft -X eval 'stuff \"stop\"\015'"
        if [ -f ${PIDFILE} ]; then
            rm -f $PIDFILE
        fi
        sleep 7
    else
        echo "$SERVICE was not running."
    fi

    if pgrep -f SCREEN > /dev/null
    then
        echo "$SERVICE could not be shut down... still running."
    else
        echo "$SERVICE is shut down."
    fi
}

log_roll() {
    mc_stop
    DATE=`date "+%Y-%m-%d"`
    mv $MCPATH/server.log $MCPATH/logs/server-$DATE.log
    gzip $MCPATH/logs/server-$DATE.log
    mc_start
}

mc_world_backup() {
    echo "Backing up minecraft world"
    if [ -e $BACKUPPATH/world_`date "+%Y.%m.%d"`.tar.bz2 ]
    then
        for i in 1 2 3 4 5 6
            do
                if [ -e $BACKUPPATH/world_`date "+%Y.%m.%d"`-$i.tar.bz2 ]
                then
                    continue
                else
                    as_user "cd $MCPATH && tar -cjf $BACKUPPATH/world_`date "+%Y.%m.%d"`-$i.tar.bz2 world"
                    break
                fi
            done
    else
        as_user "cd $MCPATH && tar -cjf $BACKUPPATH/world_`date "+%Y.%m.%d"`.tar.bz2 world"
        echo "Backed up world"
    fi
}

to_ram() {
    if [ -L $MCPATH/world ]
    then
        as_user "rsync -rvt $WORLDSTORAGE/ $RAMDISK/world"
    fi
}

to_disk() {
    as_user "rsync -rvt $MCPATH/world/ $WORLDSTORAGE"
}

mc_git_add_commit() {
    echo "Running git add/commit."
    as_user "cd $MCPATH && git add -A && git commit -a -m \"Automated backup at `date`\""
}

case "$1" in
start)
# Starts the server
to_ram
mc_start
;;
stop)
# Stops the server
as_user "screen -p 0 -S minecraft -X eval 'stuff \"say SERVER SHUTTING DOWN!\"\015'"
mc_stop
#to_disk
;;
restart)
# Restarts the server
as_user "screen -p 0 -S minecraft -X eval 'stuff \"say SERVER REBOOT IN 10 SECONDS.\"\015'"
mc_stop
mc_start
;;
backup)
# Backups world
as_user "screen -p 0 -S minecraft -X eval 'stuff \"say Backing up world.\"\015'"
mc_saveoff
#mc_world_backup
mc_git_add_commit
mc_saveon
as_user "screen -p 0 -S minecraft -X eval 'stuff \"say Backup complete.\"\015'"
;;
to-disk)
# Writes from the ramdisk to disk, in case the server crashes.
# Using ramdisk speeds things up alot, especially if you allow
# teleportation on the server.
mc_saveoff
#to_disk
echo "No-op because we don't use ramdisk so we don't need to do this."
mc_saveon
;;
connected)
# Lists connected users
as_user "screen -p 0 -S minecraft -X eval 'stuff list\015'"
sleep 3s
tac $MCPATH/server.log | grep -m 0 "Connected"
;;
log-roll)
# Moves and Gzips the logfile, a big log file slows down the
# server ALOT (what was notch thinking?)
as_user "screen -p 0 -S minecraft -X eval 'stuff \"say SERVER REBOOT IN 10 SECONDS.\"\015'"
mc_stop
log_roll
mc_start
;;
status)
# Shows server status
if pgrep -f SCREEN > /dev/null
then
    echo "$SERVICE is running."
else
    echo "$SERVICE is not running."
fi
;;

*)
echo "Usage: /etc/init.d/minecraft {start|stop|backup|log-roll|to-disk|connected|status|restart}"
exit 1
;;
esac

exit 0
